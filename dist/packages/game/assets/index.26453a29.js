import{l as L,A as j,C as x,S as k,T as O}from"./vendor.fd568195.js";const G=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))t(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const n of s.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&t(n)}).observe(document,{childList:!0,subtree:!0});function r(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerpolicy&&(s.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?s.credentials="include":i.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function t(i){if(i.ep)return;i.ep=!0;const s=r(i);fetch(i.href,s)}};G();var p=(l=>(l[l.UNDEFINED=0]="UNDEFINED",l[l.GUANINE=3]="GUANINE",l[l.ADENINE=1]="ADENINE",l[l.URACIL=4]="URACIL",l[l.CYTOSINE=2]="CYTOSINE",l[l.CUT=19]="CUT",l))(p||{});const I=class{static pairType(l,e){return I.PAIR_TYPE_MAT[l*8+e]}static stringToNucleotide(l,e=!0,r=!0){if(l==="A"||l==="a")return 1;if(l==="G"||l==="g")return 3;if(l==="U"||l==="u")return 4;if(l==="C"||l==="c")return 2;if(l==="&"||l==="-"||l==="+"){if(e)return 19;throw new Error(`Bad nucleotide '${l}`)}else{if(r)return 0;throw new Error(`Bad nucleotide '${l}`)}}static getColoredLetter(l){return l==="G"?"<G>G</G>":l==="A"?"<A>A</A>":l==="U"?"<U>U</U>":l==="C"?"<C>C</C>":""}static nucleotideToString(l,e=!0,r=!0){if(l===1)return"A";if(l===4)return"U";if(l===3)return"G";if(l===2)return"C";if(l===19){if(e)return"&";throw new Error(`Bad nucleotide '${l}`)}else{if(r)return"?";throw new Error(`Bad nucleotide '${l}`)}}};let E=I;E.PAIR_TYPE_MAT=[1,0,0,0,0,0,0,0,0,0,0,0,5,0,0,5,0,0,0,1,0,0,0,0,0,0,2,0,3,0,0,0,0,6,0,4,0,0,0,6,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,0,6,0,0,5,0,0,0];class w{constructor(e=[]){this._pairs=[],this._pairs=e.slice()}get length(){return this._pairs.length}get pairs(){return this._pairs}static fromParens(e,r=!1){const t=new w;return t.setPairs(e,r),t}getSatisfiedPairs(e){const r=new Array(this.length);for(let t=0;t<this.length;t++)this.pairs[t]<0?r[t]=-1:this.pairs[t]>t&&(E.pairType(e.nt(t),e.nt(this.pairs[t]))!==0?(r[t]=this.pairs[t],r[this.pairs[t]]=t):(r[t]=-1,r[this.pairs[t]]=-1));return new w(r)}isPaired(e){return this._pairs[e]>=0}pairingPartner(e){return this._pairs[e]}setPairingPartner(e,r){this.isPaired(e)&&this.pairingPartner(e)!==r&&(this._pairs[this.pairingPartner(e)]=-1),this._pairs[e]=r}setUnpaired(e){this._pairs[this._pairs[e]]=-1,this._pairs[e]=-1}nonempty(){return this._pairs.filter(e=>e!==-1).length!==0}isInternal(e){let r=-1,t=-1,i=-1,s=-1;if(this.pairs[e]>=0)return null;let n=e;for(;n>=0;){if(this.pairs[n]>=0){r=n,i=this.pairs[n];break}n--}for(n=e;n<this.pairs.length;){if(this.pairs[n]>=0){t=n,s=this.pairs[n];break}n++}if(r<0||t<0)return null;const a=Math.min(i,s),f=Math.max(i,s);if(r===a)return null;for(let o=a+1;o<f;o++)if(this.pairs[o]>=0)return null;const g=[];for(let o=r;o<=t;o++)g.push(o);for(let o=a;o<=f;o++)g.push(o);return g}getLongestStackLength(){let e=0,r=-1,t=-1;for(let i=0;i<this._pairs.length;i++)this._pairs[i]>i?(r<0&&(r=i),t<0||this._pairs[i]===t-1?t=this._pairs[i]:(r>=0&&i-r>e&&(e=i-r),t=-1,r=-1)):(r>=0&&i-r>e&&(e=i-r),r=-1,t=-1);return e}setPairs(e,r=!1){this._pairs=new Array(e.length).fill(-1);const t=[];for(let i=0;i<e.length;i++)if(e.charAt(i)==="(")t.push(i);else if(e.charAt(i)===")"){if(t.length===0)throw new Error("Invalid parenthesis notation");this._pairs[t[t.length-1]]=i,t.pop()}if(r){for(let i=0;i<e.length;i++)if(e.charAt(i)==="[")t.push(i);else if(e.charAt(i)==="]"){if(t.length===0)throw new Error("Invalid parenthesis notation");this._pairs[t[t.length-1]]=i,t.pop()}for(let i=0;i<e.length;i++)if(e.charAt(i)==="{")t.push(i);else if(e.charAt(i)==="}"){if(t.length===0)throw new Error("Invalid parenthesis notation");this._pairs[t[t.length-1]]=i,t.pop()}for(let i=0;i<e.length;i++)if(e.charAt(i)==="<")t.push(i);else if(e.charAt(i)===">"){if(t.length===0)throw new Error("Invalid parenthesis notation");this._pairs[t[t.length-1]]=i,t.pop()}}for(let i=0;i<this._pairs.length;i++)this._pairs[i]>=0&&(this._pairs[this._pairs[i]]=i)}stems(){const e=[];for(let r=0;r<this.length;++r){const t=this.pairingPartner(r);if(!(r>t)&&this.isPaired(r)){let i=!1;for(const s of e){for(const n of s)if(n[0]===r-1&&n[1]===t+1||n[0]===r+1&&n[1]===t-1||n[1]===r-1&&n[0]===t+1||n[1]===r+1&&n[0]===t-1){s.push([r,t]),i=!0;break}if(i)break}i||e.push([[r,t]])}}return e}stemWith(e){const r=this.stems(),t=this.pairingPartner(e);for(const i of r)for(const s of i)if(s[0]===e&&s[1]===t||s[1]===e&&s[0]===t)return i;return[]}getParenthesis(e=null,r=!1){if(r){const s=new Array(this._pairs.length).fill(-1);for(let h=0;h<this._pairs.length;h++)this._pairs[h]>h&&(s[h]=this._pairs[h],s[this._pairs[h]]=h);const n=[];for(let h=0;h<s.length;++h)s[h]!==-1&&s[h]>h&&n.push([h,s[h]]);const a=[];for(let h=0;h<n.length;++h){let _=!1;for(let c=0;c<a.length;++c){for(let u=0;u<a[c].length;++u)if(n[h][0]-1===a[c][u][0]&&n[h][1]+1===a[c][u][1]||n[h][0]+1===a[c][u][0]&&n[h][1]-1===a[c][u][1]||n[h][0]-1===a[c][u][1]&&n[h][1]+1===a[c][u][0]||n[h][0]+1===a[c][u][1]&&n[h][1]-1===a[c][u][0]){a[c].push(n[h]),_=!0;break}if(_)break}_||a.push([n[h]])}const f=new Array(this._pairs.length).fill("."),g=[/\(/i,/\{/i,/\[/i,/</i],o=[/\)/i,/\}/i,/\]/i,/>/i],A=["(","{","[","<"],P=[")","}","]",">"];if(a.length===0)return f.join("");for(let h=0;h<a.length;++h){const _=a[h];let c=0;const u=f.join("").substring(_[0][0]+1,_[0][1]);for(;u.search(g[c])!==-1&&u.search(o[c])===-1||u.search(g[c])===-1&&u.search(o[c])!==-1;)c+=1;for(let d=0;d<_.length;++d){const y=_[d][0],b=_[d][1];f[y]=A[c],f[b]=P[c]}}return f.join("")}const t=new Array(this._pairs.length).fill(-1);for(let s=0;s<this._pairs.length;s++)this._pairs[s]>s&&(t[s]=this._pairs[s],t[this._pairs[s]]=s);let i="";for(let s=0;s<t.length;s++)t[s]>s?i+="(":t[s]>=0?i+=")":e!=null&&e.hasCut(s)?i+="&":i+=".";return i}filterForPseudoknots(){const e=this.getParenthesis(null,!0).replace(/\{/g,".").replace(/\}/g,".").replace(/\[/g,".").replace(/\]/g,".").replace(/</g,".").replace(/>/g,"."),r=new w;return r.setPairs(e,!1),r}onlyPseudoknots(){const e=this.getParenthesis(null,!0).replace(/\(/g,".").replace(/\)/g,"."),r=new w;return r.setPairs(e,!0),r}numPairs(){let e=0;for(let r=0;r<this._pairs.length;r++)this._pairs[r]>r&&e++;return e}slice(e,r){const t=this._pairs.slice(e,r);for(let i=0;i<t.length;i++)t[i]>=0&&(t[i]-=e);return new w(t)}}class C{constructor(){this.isPair=!1,this.children=[],this.indexA=-1,this.indexB=-1,this.score=0,this.x=0,this.y=0,this.goX=0,this.goY=0}}class v{constructor(e=45,r=45){this._root=null,this._targetPairs=null,this._primarySpace=e,this._pairSpace=r}setupTree(e,r=null){let t=new Array(e.length);this._root=null,this._targetPairs=r,r==null&&(this._targetPairs=e),t.fill(-1);for(let s=0;s<e.length;s++)s<e.pairingPartner(s)&&(t[s]=e.pairingPartner(s),t[e.pairingPartner(s)]=s);this._scoreBiPairs=new Array(t.length+1);for(let s=0;s<t.length;s++)this._scoreBiPairs[s+1]=t[s]+1;this._scoreBiPairs[0]=t.length;let i=!1;for(let s=0;s<t.length;s++)if(t[s]>=0){i=!0;break}if(!!i){t=new w(t).filterForPseudoknots().pairs,this._targetPairs!==null&&(this._targetPairs=this._targetPairs.filterForPseudoknots()),this._root=new C;for(let s=0;s<t.length;s++)if(t[s]>=0)this.addNodesRecursive(t,this._root,s,t[s]),s=t[s];else{const n=new C;n.isPair=!1,n.indexA=s,this._root.children.push(n)}}}getCoords(e){const r=new Array(e),t=new Array(e),i=[Number.MAX_VALUE,Number.MIN_VALUE],s=[Number.MAX_VALUE,Number.MIN_VALUE];if(this._root!=null)this.getCoordsRecursive(this._root,r,t,i,s);else if(r.length<=4){for(let n=0;n<r.length;n++){r[n]=0;const a=n*this._primarySpace;t[n]=a,s[0]=Math.min(s[0],a),s[1]=Math.max(s[1],a)}i[0]=0,i[1]=0}else{const n=(r.length+1)*this._primarySpace+this._pairSpace,a=n/(2*Math.PI);let f=this._pairSpace/2;const g=0,o=1,A=g*a,P=o*a,h=-o,_=g;for(let c=0;c<r.length;c++){f+=this._primarySpace;const u=f/n*2*Math.PI-Math.PI/2,d=A+Math.cos(u)*h*a+Math.sin(u)*g*a,y=P+Math.cos(u)*_*a+Math.sin(u)*o*a;r[c]=d,t[c]=y,i[0]=Math.min(i[0],d),i[1]=Math.max(i[1],d),s[0]=Math.min(s[0],y),s[1]=Math.max(s[1],y)}}return{xarray:r,yarray:t,xbounds:i,ybounds:s}}drawTree(){this._root!=null&&this.drawTreeRecursive(this._root,null,0,0,0,1,1)}addNodesRecursive(e,r,t,i){if(t>i)throw new Error(`Error occured while drawing RNA for indices ${t} ${i}`);let s;if(e[t]===i)s=new C,s.isPair=!0,s.indexA=t,s.indexB=i,this.addNodesRecursive(e,s,t+1,i-1);else{s=new C;for(let n=t;n<=i;n++)if(e[n]>=0)this.addNodesRecursive(e,s,n,e[n]),n=e[n];else{const a=new C;a.isPair=!1,a.indexA=n,s.children.push(a)}}r.children.push(s)}getCoordsRecursive(e,r,t,i,s){if(e.isPair){const n=-e.goY*e.rotationDirection,a=e.goX*e.rotationDirection,f=e.x+n*this._pairSpace/2,g=e.x-n*this._pairSpace/2;r[e.indexA]=f,r[e.indexB]=g;const o=e.y+a*this._pairSpace/2,A=e.y-a*this._pairSpace/2;t[e.indexA]=o,t[e.indexB]=A,i[0]=Math.min(i[0],f,g),i[1]=Math.max(i[1],f,g),s[0]=Math.min(s[0],o,A),s[1]=Math.max(s[1],o,A)}else if(e.indexA>=0){const[n,a]=[e.x,e.y];r[e.indexA]=n,t[e.indexA]=a,i[0]=Math.min(i[0],n),i[1]=Math.max(i[1],n),s[0]=Math.min(s[0],a),s[1]=Math.max(s[1],a)}for(const n of e.children)this.getCoordsRecursive(n,r,t,i,s)}getRotationDirectionSign(e){this._root!=null?this.getRotationDirectionSignRecursive(this._root,e):e.fill(1)}getRotationDirectionSignRecursive(e,r){e.isPair?(r[e.indexA]=e.rotationDirection,r[e.indexB]=e.rotationDirection):e.indexA>=0&&(r[e.indexA]=e.rotationDirection);for(const t of e.children)this.getRotationDirectionSignRecursive(t,r)}drawTreeRecursive(e,r,t,i,s,n,a=1){const f=-n*a,g=s*a,o=0;if(e.goX=s,e.goY=n,e.rotationDirection=a,e.children.length===1)e.x=t,e.y=i,e.children[0].isPair?this.drawTreeRecursive(e.children[0],e,t+s*this._primarySpace,i+n*this._primarySpace,s,n,a):!e.children[0].isPair&&e.children[0].indexA<0?this.drawTreeRecursive(e.children[0],e,t,i,s,n,a):this.drawTreeRecursive(e.children[0],e,t+s*this._primarySpace,i+n*this._primarySpace,s,n,a);else if(e.children.length>1){let A=0;for(let c=0;c<e.children.length;c++)e.children[c].isPair&&A++;let P=(e.children.length+1)*this._primarySpace+(A+1)*this._pairSpace;P+=o;const h=P/(2*Math.PI);let _=this._pairSpace/2;r==null?(e.x=s*h,e.y=n*h):(e.x=r.x+s*h,e.y=r.y+n*h);for(const c of e.children){_+=this._primarySpace,c.isPair&&(_+=this._pairSpace/2);const u=_/P*2*Math.PI-Math.PI/2,d=e.x+Math.cos(u)*f*h+Math.sin(u)*s*h,y=e.y+Math.cos(u)*g*h+Math.sin(u)*n*h,b=d-e.x,T=y-e.y,U=Math.sqrt(b*b+T*T);this.drawTreeRecursive(c,e,d,y,b/U,T/U,a),c.isPair&&(_+=this._pairSpace/2)}}else e.x=t,e.y=i}}class m{constructor(e){this._baseArray=e}hasCut(e,r){return r===void 0&&(r=e),this.baseArray.slice(e,r+1).some(t=>t===p.CUT)}static fromSequenceString(e,r=!0,t=!0){const i=[];for(const s of e)i.push(E.stringToNucleotide(s,r,t));return new m(i)}concat(e){return new m(this._baseArray.concat(e.baseArray))}getColoredSequence(){let e="";const r=this.sequenceString();for(const t of r)e+=E.getColoredLetter(t);return e}getExpColoredSequence(e){if(e==null)return this.sequenceString();const r=e[0],t=Math.max(...e.slice(1)),i=Math.min(...e.slice(1)),s=(t+i)/2;let n="";const a=this.sequenceString();for(let f=0;f<this.length;f++)f<r-1||f>=e.length?n+=a[f]:e[f]<s?n+=`<FONT COLOR='#7777FF'>${a[f]}</FONT>`:n+=`<FONT COLOR='#FF7777'>${a[f]}</FONT>`;return n}countConsecutive(e,r=null){let t=0,i=0,s=-1;for(i=0;i<this._baseArray.length;i++)if(this._baseArray[i]===e)s<0&&(s=i);else if(s>=0){if(t<i-s)if(r==null)t=i-s;else{let n=!0,a;for(a=s;a<i;a++)n=n&&r[a];n===!1&&(t=i-s)}s=-1}return s>=0&&t<i-s&&(t=i-s),t}getRestrictedConsecutive(e,r,t=null){const i=[];let s=0,n=-1;if(r<=0)return i;for(s=0;s<this._baseArray.length;s++)if(this._baseArray[s]===e)n<0&&(n=s);else if(n>=0){if(r<s-n)if(t==null)i.push(n),i.push(s-1);else{let a=!0,f;for(f=n;f<s;f++)a=a&&t[f];a===!1&&(i.push(n),i.push(s-1))}n=-1}return n>=0&&r<s-n&&(i.push(n),i.push(s-1)),i}getSequenceRepetition(e){const r=new Set;let t=0;for(let i=0;i<this.sequenceString.length-e;i++){const s=this.sequenceString().substr(i,e);r.has(s)?t++:r.add(s)}return t++}numGUPairs(e){let r=0;for(let t=0;t<e.length;t++)e.pairingPartner(t)>t&&(this._baseArray[t]===p.GUANINE&&this._baseArray[e.pairingPartner(t)]===p.URACIL&&r++,this._baseArray[t]===p.URACIL&&this._baseArray[e.pairingPartner(t)]===p.GUANINE&&r++);return r}numGCPairs(e){let r=0;for(let t=0;t<e.length;t++)e.pairingPartner(t)>t&&(this._baseArray[t]===p.GUANINE&&this._baseArray[e.pairingPartner(t)]===p.CYTOSINE&&r++,this._baseArray[t]===p.CYTOSINE&&this._baseArray[e.pairingPartner(t)]===p.GUANINE&&r++);return r}numUAPairs(e){let r=0;for(let t=0;t<e.length;t++)e.pairingPartner(t)>t&&(this._baseArray[t]===p.ADENINE&&this._baseArray[e.pairingPartner(t)]===p.URACIL&&r++,this._baseArray[t]===p.URACIL&&this._baseArray[e.pairingPartner(t)]===p.ADENINE&&r++);return r}count(e){return this._baseArray.reduce((r,t)=>r+(t===e?1:0),0)}findCut(e=0){return this._baseArray.indexOf(p.CUT,e)}findUndefined(){return this._baseArray.indexOf(p.UNDEFINED)}lastCut(){return this._baseArray.lastIndexOf(p.CUT)}get baseArray(){return this._baseArray}set baseArray(e){this._baseArray=e}nt(e){return this._baseArray[e]}setNt(e,r){this._baseArray[e]=r}sequenceString(e=!0,r=!0){return this._baseArray.map(t=>E.nucleotideToString(t,e,r)).join("")}toString(){return this.sequenceString()}get length(){return this._baseArray.length}slice(e,r=-1){return r===-1?new m(this._baseArray.slice(e)):new m(this._baseArray.slice(e,r))}}function F(l,e){const r=new v(45,45);r.setupTree(new w(l)),r.drawTree();const t=new m(e);return{sequence:t,...r.getCoords(t.length)}}class N{constructor(e){this._onPropertyChanged=new L.AsyncEvent,this._state=e}static get instance(){return this._instance||(this._instance=new N({pairs:[],bases:[]})),this._instance}get onPropertyChanged(){return this._onPropertyChanged}setProperty(e,r){const t=this._state[e],i=r;this._state[e]=i,this.onPropertyChanged.post({name:e,oldValue:t,newValue:i})}}const S=new j({resolution:devicePixelRatio});document.body.appendChild(S.view);function R(){S.renderer.resize(window.innerWidth,window.innerHeight)}N.instance.onPropertyChanged.attach(l=>{const{name:e,oldValue:r,newValue:t}=l;console.log({name:e,oldValue:r,newValue:t})});N.instance.setProperty("bases",[1,2]);R();window.addEventListener("resize",R);const M=new x;M.x=window.innerWidth/2;M.y=window.innerHeight/2;S.stage.addChild(M);const q=F([-1,13,12,11,10,9,-1,-1,-1,-1,-1,-1,-1,-1,-1],[1,1,1,3,4,1,1,1,1,4,3,2,3,4,1]);function V(l){switch(l){case p.URACIL:return"assets/new_big_blue.png";case p.CYTOSINE:return"assets/new_big_green.png";case p.GUANINE:return"assets/new_big_red.png";default:return"assets/new_big_yellow.png"}}function $(l,e){for(let r=0;r<l.sequence.length;++r){const t=V(l.sequence.baseArray[r]),i=new k(O.from(t));i.x=l.xarray[r]-i.getBounds().width/2,i.y=l.yarray[r]-i.getBounds().height/2,i.y=l.yarray[r]-i.getBounds().height/2,e.addChild(i)}}$(q,M);S.renderer.plugins.interaction.on("pointerdown",l=>{l.stopped});
